//
// Generated file, do not edit! Created by opp_msgtool 6.0 from vector.msg.
//

#ifndef __VECTOR_M_H
#define __VECTOR_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class VectorMsg;
/**
 * Class generated from <tt>vector.msg:2</tt> by opp_msgtool.
 * <pre>
 * message VectorMsg
 * {
 *     int vector[4];
 * }
 * </pre>
 */
class VectorMsg : public ::omnetpp::cMessage
{
  protected:
    int vector[4] = {0};

  private:
    void copy(const VectorMsg& other);

  protected:
    bool operator==(const VectorMsg&) = delete;

  public:
    VectorMsg(const char *name=nullptr, short kind=0);
    VectorMsg(const VectorMsg& other);
    virtual ~VectorMsg();
    VectorMsg& operator=(const VectorMsg& other);
    virtual VectorMsg *dup() const override {return new VectorMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual size_t getVectorArraySize() const;
    virtual int getVector(size_t k) const;
    virtual void setVector(size_t k, int vector);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const VectorMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, VectorMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline VectorMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<VectorMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __VECTOR_M_H

