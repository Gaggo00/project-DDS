//
// Generated file, do not edit! Created by opp_msgtool 6.0 from proposal.msg.
//

#ifndef __PROPOSAL_M_H
#define __PROPOSAL_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ProposalMsg;
/**
 * Class generated from <tt>proposal.msg:2</tt> by opp_msgtool.
 * <pre>
 * message ProposalMsg
 * {
 *     int intMsg;
 *     int sender;
 * }
 * </pre>
 */
class ProposalMsg : public ::omnetpp::cMessage
{
  protected:
    int intMsg = 0;
    int sender = 0;

  private:
    void copy(const ProposalMsg& other);

  protected:
    bool operator==(const ProposalMsg&) = delete;

  public:
    ProposalMsg(const char *name=nullptr, short kind=0);
    ProposalMsg(const ProposalMsg& other);
    virtual ~ProposalMsg();
    ProposalMsg& operator=(const ProposalMsg& other);
    virtual ProposalMsg *dup() const override {return new ProposalMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getIntMsg() const;
    virtual void setIntMsg(int intMsg);

    virtual int getSender() const;
    virtual void setSender(int sender);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ProposalMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ProposalMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline ProposalMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<ProposalMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PROPOSAL_M_H

